/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Paneltpu;

import DAO.daoClientes;
import DAO.dao_comisiones;
import DAO.daocfdi;
import DAO.daoempresa;
import DAO.daofactura_tpu;
import DAO.daoxmlpagostpu;
import Modelo.Cliente;
import Modelo.Comision;
import Modelo.ConceptosES;
import Modelo.Detpagos;
import Modelo.Dfactura;
import Modelo.Empresas;
import Modelo.Formadepago;
import Modelo.Formateo_Nempresas;
import Modelo.Formateodedatos;
import Modelo.Kardexrcpt;
import Modelo.Sellofiscal;
import Modelo.Tipo_pagos;
import Modelo.Usuarios;
import Modelo.cargo;
import Modelo.convertnum;
import Modelo.factura;
import Modelo.metodopago;
import Modelo.relacion;
import Modelo.usocfdi;
import Server.Serverprod;
import Server.Serverylite;
import java.math.BigDecimal;
import java.math.RoundingMode;
import java.sql.Connection;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import static javax.swing.WindowConstants.DISPOSE_ON_CLOSE;
import javax.swing.table.DefaultTableModel;
import mx.sat.cfd40.timbrarXML;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRExporter;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.export.JRPdfExporter;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author GATEWAY1-
 */
public class pagotpu2 extends javax.swing.JPanel {

    public String nombre, empresa;
    public Connection sqlcfdi, sqlempresa;
    public Connection ACobranza, rcpt, cpt;
    Serverylite slite = new Serverylite();
    Serverprod prod = new Serverprod();
    public ArrayList<Formadepago> arrfpago = new ArrayList<>();
    public ArrayList<usocfdi> arruso = new ArrayList<>();
    public ArrayList<metodopago> arrmetodo = new ArrayList<>();
    public ArrayList<ConceptosES> arrcuentas = new ArrayList<>();
    public ArrayList<relacion> arrrelacion = new ArrayList<>();
    ArrayList<cargo> arrcargo = new ArrayList<>();
    ArrayList<cargo> arrcargoseleccion = new ArrayList<>();//cargos seleccionados
    ArrayList<Tipo_pagos> arrnpagos = new ArrayList<>();//cargos seleccionados v2

    daocfdi dcfdi = new daocfdi();

    double descuentos;
    double impuestos;
    double subtotal;
    double total;
    public Usuarios u;

    //kardex para fac
    ArrayList<Kardexrcpt> k = new ArrayList<>();
    ArrayList<Kardexrcpt> k0 = new ArrayList<>();

    /**
     * Creates new form Cliente1
     */
    public pagotpu2() {
        initComponents();
//        cargatabla();
        JtCliente.requestFocus();
//        iniciarconexiones();  Solo si se usa solo la clase si no se pasan directamente desde facturacion
// carga en combos los catalogos del sat

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupo = new javax.swing.ButtonGroup();
        pop = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane4 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        JlNombre = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        JtCliente = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        JcMetodo = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        JcUso = new javax.swing.JComboBox<>();
        jPanel4 = new javax.swing.JPanel();
        JcCuenta = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        JtDetalle = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        JtObs = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        Jlcargofac = new javax.swing.JList<>();
        jLabel21 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Jlsub = new javax.swing.JLabel();
        JlDesc = new javax.swing.JLabel();
        JlIva = new javax.swing.JLabel();
        JlTotal = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        JtFecha = new com.toedter.calendar.JDateChooser();
        jPanel5 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();

        pop.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                popMousePressed(evt);
            }
        });

        jMenuItem1.setText("Elimina linea");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        pop.add(jMenuItem1);

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));

        JlNombre.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        JlNombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        jSeparator2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        JtCliente.setFont(new java.awt.Font("Arial", 0, 15)); // NOI18N
        JtCliente.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        JtCliente.setBorder(null);
        JtCliente.setCursor(new java.awt.Cursor(java.awt.Cursor.TEXT_CURSOR));
        JtCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtClienteMousePressed(evt);
            }
        });
        JtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JtClienteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel6.setText("# Cliente");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel15.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel15.setText("Metodo de Pago");

        JcMetodo.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        JcMetodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcMetodoActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel17.setText("Uso Cfdi");

        JcUso.setFont(new java.awt.Font("Calibri", 0, 11)); // NOI18N
        JcUso.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcUsoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(55, 55, 55)
                        .addComponent(JcUso, 0, 344, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(JcMetodo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(JcMetodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(JcUso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        JcCuenta.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        JcCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JcCuentaActionPerformed(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel20.setText("Cuentas");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(JcCuenta, 0, 405, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(JcCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        JtDetalle.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Factura", "Pago", "Importe", "Iva"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        JtDetalle.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        JtDetalle.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                JtDetalleMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(JtDetalle);

        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Refresh_36729.png"))); // NOI18N
        jLabel3.setToolTipText("Actualiza datos");
        jLabel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel3MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jLabel3MouseReleased(evt);
            }
        });

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/ic_send_128_28719.png"))); // NOI18N
        jLabel2.setToolTipText("Procesar Pago");
        jLabel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel2MousePressed(evt);
            }
        });

        JtObs.setColumns(20);
        JtObs.setRows(5);
        jScrollPane2.setViewportView(JtObs);

        Jlcargofac.setFont(new java.awt.Font("Calibri", 0, 12)); // NOI18N
        Jlcargofac.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(Jlcargofac);

        jLabel21.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Facturas en Uso");

        jPanel3.setBackground(new java.awt.Color(10, 78, 160));

        jLabel7.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Subtotal");

        jLabel8.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Descuento");

        jLabel9.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Iva");

        jLabel10.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setText("Total");

        Jlsub.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        Jlsub.setForeground(new java.awt.Color(255, 255, 255));
        Jlsub.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlDesc.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlDesc.setForeground(new java.awt.Color(255, 255, 255));
        JlDesc.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlIva.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlIva.setForeground(new java.awt.Color(255, 255, 255));
        JlIva.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        JlTotal.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        JlTotal.setForeground(new java.awt.Color(255, 255, 255));
        JlTotal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Jlsub, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlDesc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlIva, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(JlTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Jlsub, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JlDesc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(JlIva, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(JlTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(11, 11, 11))
        );

        jLabel12.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel12.setText("Observaciones");

        jLabel11.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel11.setText("Fecha Pago");
        jLabel11.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel11MousePressed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(new javax.swing.border.MatteBorder(new javax.swing.ImageIcon(getClass().getResource("/Recursos/bordemorado4x4.png")))); // NOI18N

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/flat-style-circle-save_icon-icons.com_66942.png"))); // NOI18N
        jLabel4.setToolTipText("Actualiza datos");
        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel4MousePressed(evt);
            }
        });

        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/1486506257-interface-layout-multi-column-design-column-website_81457.png"))); // NOI18N
        jLabel5.setToolTipText("Ver formas de pago capturadas");
        jLabel5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel5MousePressed(evt);
            }
        });

        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Recursos/Clear_37294.png"))); // NOI18N
        jLabel13.setToolTipText("Limpiar");
        jLabel13.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel13.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jLabel13MousePressed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(jLabel13))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(JtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3))
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 683, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 187, Short.MAX_VALUE)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(JtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(JlNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel21, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2))
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addGap(49, 49, 49)
                                        .addComponent(jLabel2))
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jPanel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(10, 10, 10)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(JlNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(JtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)))
                        .addGap(6, 6, 6)
                        .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(JtFecha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jScrollPane4.setViewportView(jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 615, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

//    private void cargatabla() {
//        model.addColumn("Descripcion");
//        model.addColumn("Clave sat");
//        model.addColumn("Descuento");
//        model.addColumn("Cantidad");
//        JtDetalle.setModel(model);
//    }
    public void cargacombos() {//catalogos de Sat
        DefaultComboBoxModel metodo = new DefaultComboBoxModel();
        DefaultComboBoxModel uso = new DefaultComboBoxModel();
        DefaultComboBoxModel cuentas = new DefaultComboBoxModel();
//        for (metodopago arrmetodo1 : arrmetodo) {
////            metodo.addElement(arrmetodo1.getMetodopago() + " - " + arrmetodo1.getDescripcion());
//        }
        metodo.addElement("PUE - PAGO EN UNA SOLA EXHIBICION");
        uso.addElement("CP01 - Pagos");
//        for (usocfdi arruso1 : arruso) {
//            uso.addElement(arruso1.getusocfdi() + " - " + arruso1.getDescripcion());
//        }
//        for (relacion arruso1 : arrrelacion) {
//            relacion.addElement(arruso1.getRelacion() + " - " + arruso1.getConcepto());
//        }
        JcMetodo.setModel(metodo);
        JcUso.setModel(uso);
//        JtRelacion.setModel(relacion);
        // Cuentas
        daofactura_tpu d = new daofactura_tpu();
        arrcuentas = d.getalcuentastpu(ACobranza, "50");
        for (ConceptosES arruso1 : arrcuentas) {
            cuentas.addElement(arruso1.getCuenta() + ", " + arruso1.getSubcuenta() + " - " + arruso1.getNombre());
        }
        JcCuenta.setModel(cuentas);

    }

    private void popMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_popMousePressed

    }//GEN-LAST:event_popMousePressed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jLabel11MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel11MousePressed

    }//GEN-LAST:event_jLabel11MousePressed

    private void jLabel4MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MousePressed
        if (!arrcargo.isEmpty()) {
            cargacargos();
        } else {
            getcargos();
        }
    }//GEN-LAST:event_jLabel4MousePressed

    private void jLabel2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MousePressed
        jLabel2.setVisible(false);
        Formateodedatos fd = new Formateodedatos();
        if (!fd.verficafechanula(JtFecha)) {
            setfactura();
        }
    }//GEN-LAST:event_jLabel2MousePressed

    private void jLabel3MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel3MouseReleased

    private void jLabel3MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel3MousePressed
        actualizaimportes();
    }//GEN-LAST:event_jLabel3MousePressed

    private void JtDetalleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtDetalleMousePressed
        if (evt.getButton() == 3) {// activar con clic derecho
            pop.show(evt.getComponent(), evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_JtDetalleMousePressed

    private void JcCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcCuentaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcCuentaActionPerformed

    private void JcUsoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcUsoActionPerformed

    }//GEN-LAST:event_JcUsoActionPerformed

    private void JcMetodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JcMetodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_JcMetodoActionPerformed

    private void JtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_JtClienteActionPerformed
        jLabel2.setVisible(true);
        if (arrnpagos.isEmpty()) {
            getcargos();
        } else {
            JOptionPane.showMessageDialog(null,
                    "No puedes seleccionar un cliente nuevo teniendo cargos capturados");
            int a = JOptionPane.showConfirmDialog(null,
                    "Quieres limpiar todo el proceso actual?");
            if (a == 0) {
                vaciarcampos();
            }
        }
    }//GEN-LAST:event_JtClienteActionPerformed

    private void JtClienteMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_JtClienteMousePressed
        JtCliente.setText("");
    }//GEN-LAST:event_JtClienteMousePressed

    private void jLabel5MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel5MousePressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jLabel5MousePressed

    private void jLabel13MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel13MousePressed
        vaciarcampos();
    }//GEN-LAST:event_jLabel13MousePressed

    /**
     * Busca y despliega los clientes con cargos, ademas despliega una lista de
     * los mismo y realizar su seleccion
     */
    private void getcargos() {
        String r = JtCliente.getText();
        Formateodedatos fd = new Formateodedatos();
        daoClientes dc = new daoClientes();
        ArrayList<Cliente> arrcliente = dc.getfoliotopagotpu_Clientes(cpt,
                r, fd.getbd_tocargo(u.getTurno()));
        Buscacliente_Pago bp = new Buscacliente_Pago(null, true);
        bp.setarrcliente(arrcliente);
        //llena de informacion la lista
        bp.setlista();
        bp.setVisible(true);
        //Obtiene el registro del cliente recien seleccionado
        int cliente = bp.getCliente();
        //Verifica que el cliente no sea cero o menor a el
        if (cliente != 0) {
            daofactura_tpu df = new daofactura_tpu();
            arrcargo = df.getfactopagotpu(cpt, cliente + "", fd.getbd_tocargo(u.getTurno()));
            if (arrcargo.isEmpty()) {
                JOptionPane.showMessageDialog(null, "No hay cargos con ese cliente");
                JtCliente.setText("");
                JtCliente.requestFocus();
            } else {
                JlNombre.setText(arrcargo.get(0).getNombre());
                cargacombos();
                cargacargos();
            }
        }
    }

    /**
     * Carga formulario de cargos
     */
    private void cargacargos() {
        if (!arrcargo.isEmpty()) {
            Cargosncrtpu_npagos p = new Cargosncrtpu_npagos(null, true);
//        p.setAlwaysOnTop(true);
//            p.relacion = arrrelacion.get(JtRelacion.getSelectedIndex()).getRelacion();
            p.arrcargo = arrcargo;
            p.getArrpagos(arrnpagos);
            p.desplieguecargos();
            p.arrfp = arrfpago;
            p.cargacombos();
            p.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
            p.setVisible(true);
            //arrcargoseleccion = p.arrcargoseleccion;
            //Obtiene la lista de facturas con su forma de pago
            if (p.getEstado().equals("1")) {
                arrnpagos.add(p.getTipo_pagos());
                arrcargo = p.getcargos();
            }
            llenalistafac();
            actualizaimportes();
        }
    }

    private void llenalistafac() {
        DefaultListModel<String> model = new DefaultListModel<>();
        Formateodedatos fd = new Formateodedatos();
        for (Tipo_pagos arrp : arrnpagos) {
            model.addElement("Forma pago " + arrp.getFp() + ", " + arrp.getImporte()
                    + ", Facs: " + arrp.getArrcargos().size());
        }
        Jlcargofac.setModel(model);
    }

    private void setfactura() {
        if (arrnpagos.isEmpty()) {
            JtCliente.requestFocus();
        } else {
            Formateodedatos fd = new Formateodedatos();
            Formateo_Nempresas fn = new Formateo_Nempresas();
            factura f = new factura();
//            int row = JtFolio1.getSelectedIndex();
            java.util.Date date = new Date();
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss");
            daofactura_tpu dfac = new daofactura_tpu();
//                Nocolisionncr n = new Nocolisionncr();
            f.setFolio(dfac.getmaxfoliotpu(cpt, "PAG"));//Obtiene y setea el foliomaximo de *documentos
//                n.setConnecxiones(rcpt, f.getFolio());
//                n.start();
////                JOptionPane.showMessageDialog(null, "Espera al msj de Aceptacion de folio "+n.isAlive());
//                do {//ciclo hasta que termine la busqueda y asignacion, no es lo ideal pero es temporal y reduce colisiones
//
//                } while (n.isAlive());
            if (arrnpagos.get(0).getTipocambio() != 1) {
                f.setMoneda("USD");
                f.setTipocambio(arrnpagos.get(0).getTipocambio());
            } else {
                f.setMoneda("MXN");
                f.setTipocambio(1);
            }
            // fin setear impuestos
//                f.setImpiva16(getnewcantidades((total / 1.16) * 0.16, "iva"));// Nodo totales
//                f.setBaseiva16(getnewcantidades(total / 1.16, "importe"));
//                f.setTotalpago16(total);
            double imp16 = impuestos * f.getTipocambio();
            double base16 = subtotal * f.getTipocambio();
            Double au = fd.formatdecimalv3(total * f.getTipocambio());
            f.setImpiva16(fd.formatdecimalv3(imp16));// Nodo totales
            f.setBaseiva16(fd.formatdecimalv3(base16));
            f.setTotalpago16(au);
            //Monto del pago
            f.setMonto(fd.formatdecimalv3(total));
//                Fin nodo totales
            f.setExportacion("01");
            f.setTiporelacion("");
            f.setEmpresa("1");
            f.setClaveusuario(u.getUsuario());
            f.setSerie("PAG");
            f.setFecha(sdf.format(date));
            f.setFechap(JtFecha.getDate());
            f.setDescuento(0);
            f.setPedido("");
            f.setFechasolicitado(sdf.format(date));
            f.setTurno(u.getTurno());
            f.setFechapago(sdf.format(JtFecha.getDate()));
            f.setSubtotal(0);
            f.setTotal(total);
            f.setIdcliente(arrnpagos.get(0).getArrcargos().get(0).getCliente());
            f.setNombre(arrnpagos.get(0).getArrcargos().get(0).getNombre());
            f.setRfc(arrnpagos.get(0).getArrcargos().get(0).getRfc());
            f.setCp(arrnpagos.get(0).getArrcargos().get(0).getCp());
            f.setRegimen(arrnpagos.get(0).getArrcargos().get(0).getRegimen());
            f.setTotalcajas(0);
            f.setTiposerie("PAGO");
            f.setFormapago("");
            f.setMetodopago("PUE");
            f.setDescmetodop("PAGO EN UNA SOLA EXHIBICION");
            f.setUsocfdi("CP01");
            f.setCondicion("Contado");
            f.setAgente(arrnpagos.get(0).getArrcargos().get(0).getAgente());
            f.setPlazo(arrnpagos.get(0).getArrcargos().get(0).getPlazo());
            f.setMarca(arrnpagos.get(0).getArrcargos().get(0).getRef());
            f.setLugarexpedicion(fn.getLugar_exp());
            //concepto
            f.setCuentaabono(arrcuentas.get(JcCuenta.getSelectedIndex()).getId_concepto() + "");
            f.setDesccuenta(arrcuentas.get(JcCuenta.getSelectedIndex()).getNombre());
            String folios = "";
            String facturas = "";
            //Mandar un string con los folios fiscales

            ArrayList<Dfactura> arrdet = new ArrayList<>();
            String metodo = "";
            boolean flagmetodo = false;
            boolean ispue = false;
            //Detallado del pago por nformas de pago
            for (int x = 0; x < arrnpagos.size(); x++) {
                ArrayList<Detpagos> arrdetpago = new ArrayList<>();
                Tipo_pagos tp = new Tipo_pagos();
                System.out.println("a " + arrnpagos.get(x).getArrcargos().size());
                for (int i = 0; i < arrnpagos.get(x).getArrcargos().size(); i++) {
                    Detpagos d = new Detpagos();
                    d.setIddocumento(f.getFolio());
                    d.setCantidad(1);
                    d.setDescripcion("Pago");
                    d.setCodigo("84111506");
                    d.setUmedida("ACT");
                    d.setPrecio(0);
                    d.setMoneda(f.getMoneda());
                    d.setMonto(arrnpagos.get(x).getArrcargos().get(i).getDescuento());
                    d.setRfcctaemisora("AB");
                    d.setCtaemisora("12");
                    d.setRfcctareceptora("BC");
                    d.setCtareceptora("34");
                    d.setUuid(arrnpagos.get(x).getArrcargos().get(i).getFoliofiscal());
                    d.setFolio(arrnpagos.get(x).getArrcargos().get(i).getReferencia());
                    d.setFormadedpago(arrnpagos.get(x).getArrcargos().get(i).getFormapago());
                    d.setMetodopago(arrnpagos.get(x).getArrcargos().get(i).getMetodopago());
                    d.setParcialidad(arrnpagos.get(x).getArrcargos().get(i).getParcialidad());
                    d.setIdcargo(arrnpagos.get(x).getArrcargos().get(i).getId_cargo());
                    if (i == 0) {
                        metodo = arrnpagos.get(x).getArrcargos().get(i).getMetodopago();
                        flagmetodo = metodo.equals(
                                arrnpagos.get(x).getArrcargos().get(i).getMetodopago());
                        ispue = arrnpagos.get(x).getArrcargos().get(i).getMetodopago().equals("PUE");
                    } else {
                        flagmetodo = metodo.equals(
                                arrnpagos.get(x).getArrcargos().get(i).getMetodopago());
                        ispue = arrnpagos.get(x).getArrcargos().
                                get(i).getMetodopago().equals("PUE");
                        if (flagmetodo == false) {
                            break;
                        }
                    }
                    double sa;
                    double pa;
                    double sal;
                    sa = (f.getMoneda().equals("MXN"))
                            ? arrnpagos.get(x).getArrcargos().get(i).getSaldomx()
                            : arrnpagos.get(x).getArrcargos().get(i).getSaldo();
                    d.setSaldo(sa - arrnpagos.get(x).getArrcargos().get(i).getDescuento());
                    pa = arrnpagos.get(x).getArrcargos().get(i).getDescuento();
                    sal = sa - pa;
                    d.setImportesaldoant(getcant16(sa));
                    d.setImportepagado(getcant16(pa));
                    d.setImpsaldoinsoluto(getcant16(sal));
                    arrdetpago.add(d);
                }
                tp = arrnpagos.get(x);
                tp.setArrdetpago(arrdetpago);
                arrnpagos.set(x, tp);
                //arrdetpago.clear();
            }
            f.setArrnpagos(arrnpagos);
//                Solo 1 renglon para el cuerpo de la factura
            Dfactura df = new Dfactura();
            df.setPrecio(0);
            df.setImpuesto("01");
            df.setImporta(0);
            df.setDescripcion("Pago");
            df.setUmedida("ACT");
            df.setCodigo("84111506");
            df.setCantidad(0);
            arrdet.add(df);
            f.setArr(arrdet);
            //f.setArrpagos(arrdetpago);
            //f.setArrpagos17(arrdetpago17);
            f.setRefncredito(facturas);
            f.setObservaciones(JtObs.getText().toUpperCase());
            f.setFoliofiscalorig(folios);
            if (!flagmetodo) {
                JOptionPane.showMessageDialog(null, "Error!,- No puedes seleccionar una factura PUE y PPD en un mismo pago");
            } else {
                int verifica = dfac.getbuscafoliotpu(cpt, "PAG", f.getFolio() + "");
//                    Verifica si usar el metodo pue y usar operaciones de Solo hacer abono y no complemento
                if (ispue) {
                    if (verifica != 0) {
                        JOptionPane.showMessageDialog(null, "Error!,- El folio ya se encuentra en uso, contacta a sistemas ");
                    } else {
                        int id = dfac.insertpagotpu(cpt, ACobranza, f);
                        if (id != 0) {
                            setcomisiones(f);
                            JOptionPane.showMessageDialog(null, "Pago realizado con exito");
//                                System.out.println("Exito");
                            vaciarcampos();
                            JtCliente.requestFocus();
                        }
                    }
                } else {
                    if (verifica != 0) {
                        JOptionPane.showMessageDialog(null, "Error!,- El folio ya se encuentra en uso, contacta a sistemas ");
                    } else {
//                    int id = dfac.nuevancrtpu(cpt, f, ACobranza, rcpt);
                        int id = dfac.insertpagotpu(cpt, ACobranza, f);
                        if (id != 0) {
//                                System.out.println("Exito");
                            daoxmlpagostpu dx = new daoxmlpagostpu();
                            f.setId(id);
                            dx.generarfac(f, cpt, sqlempresa);
                            timbrarXML tim = new timbrarXML();
                            Sellofiscal s = tim.timbrar(f.getSerie() + "_" + f.getFolio(), nombre, sqlempresa, f.getEmpresa());
                            dfac.Updatesellofiscalpagotpu(cpt, s, id);
                            JOptionPane.showMessageDialog(null, "Proceso terminado- " + s.getEstado());
                            setcomisiones(f);
                            setreport(f.getFolio(), f.getRegimen(), f.getMoneda());
                            vaciarcampos();
                            JtCliente.requestFocus();
                        }
                    }
                }
            }

        }
        jLabel2.setVisible(true);
    }

    public ArrayList<cargo> getcargosfacs() {
        ArrayList<cargo> arr = new ArrayList<>();
        Formateodedatos fd = new Formateodedatos();
        for (int y = 0; y < arrcargoseleccion.size(); y++) {
            cargo car = new cargo();
            double desc = fd.formatdecimalv2(arrcargoseleccion.get(y).getDescuento());
            car.setDescuento(fd.formatdecimalv2(desc));
            car.setFoliofiscal(arrcargoseleccion.get(y).getFoliofiscal());
            car.setCuenta(arrcargoseleccion.get(y).getCuenta());
            car.setSubcuenta(arrcargoseleccion.get(y).getSubcuenta());
            car.setCliente(arrcargoseleccion.get(y).getCliente());
            car.setReferencia(arrcargoseleccion.get(y).getReferencia());
            car.setFecha(arrcargoseleccion.get(y).getFecha());
            arr.add(car);
        }
        return arr;
    }

    /**
     * La funcion realiza la busqueda de informacion del pago recien realizado
     * La funcion no se ejecuta en ninguna otra ocasion amenos que haya
     * terminado de forma exitosa.
     *
     * @param f
     */
    private void setcomisiones(factura f) {
        dao_comisiones dc = new dao_comisiones();
        Formateodedatos form = new Formateodedatos();
//        Realiza la busqueda de acuerdo a la fecha formateada y referencias
        ArrayList<Comision> arrcomision = dc.getcomisiones(ACobranza,
                fechasinT(f.getFechapago()), referencias(), u.getTurno());
        for (int i = 0; i < arrcomision.size(); i++) {
//            Se da valor a un nuevo objeto Comision para despues hacer el remplazo
//          del indice con el nuevo valor del objeto
            Comision comi = new Comision();
            double tipocambio = f.getTipocambio();
            double comision = arrcomision.get(i).getComision();
            double resultado = (f.getMoneda().equals("USD")) ? tipocambio * comision : comision;
            comi.setComision(form.formatdecimalv2(resultado));
            comi.setId_cargo(arrcomision.get(i).getId_cargo());
            comi.setId_agente(arrcomision.get(i).getId_agente());
            comi.setReferencia(arrcomision.get(i).getReferencia());
            comi.setSerie("A");
            comi.setDias(arrcomision.get(i).getDias());
            comi.setFecha(f.getFechapago());
            comi.setUsuario(f.getClaveusuario());
            comi.setImporte(arrcomision.get(i).getImporte());
            comi.setTipocambio(tipocambio);
            comi.setFoliopago(f.getSerie() + "_" + f.getFolio());
            comi.setPorcentaje(arrcomision.get(i).getPorcentaje());
            arrcomision.set(i, comi);
        }
//        Se realiza la insercion de cada de los folios validos en la bd
        dc.newcomision(cpt, arrcomision);
    }

    /**
     * Formatea y ordena cada folio y /o referencia a filtrar del pago que
     * recientemente se realizo
     *
     * @return
     */
    private String referencias() {
        String ref = "";
        for (Tipo_pagos arrp : arrnpagos) {
            for (int i = 0; i < arrp.getArrcargos().size(); i++) {
                String arrref = arrp.getArrcargos().get(i).getReferencia();
                if (arrp.getArrcargos().size() == 1) {
                    ref = "referencia='" + arrref + "'";
                } else {
                    if (i == 0) {
                        ref = "referencia='" + arrref + "' ";
                    } else {
                        ref += " or referencia='" + arrref + "'";
                    }
                }
            }
        }

        return ref;
    }

    /**
     * La funcion realiza el intercambio de el caracter 'T' por un vacio, ya que
     * en la funcion es necesario el uso de la fecha pero con el caracter la
     * consulta es invalida
     *
     * @param fecha
     * @return
     */
    private String fechasinT(String fecha) {
        String resp = "";
        for (int i = 0; i < fecha.length(); i++) {
            if (fecha.charAt(i) == 'T') {
                resp += ' ';
            } else {
                resp += fecha.charAt(i) + "";
            }
        }
        return resp;
    }

    /**
     *
     * @param folio Folio de la factura
     * @param arrmetodo Array que contiene el metodo de pago
     * @param arruso Array que contiene el uso de cfdi
     * @see Despliegue y creacion del archivo pdf con los datos previamente
     * creados El reporte fue previamente creado en un modulo anterior que solo
     * creaba el pdf el proyecto se llama "Facturas"
     *
     */
    private void setreport(int folio, String regimen, String moneda) {
        try {
            String conformidad = (!moneda.equals("MXN")) ? "De conformidad con el Art. 20 del C.F.F., informamos que "
                    + "para convertir moneda extranjera a su equivalente en moneda nacional, el tipo de cambio a "
                    + "utilizar para efectos de pagos será el que publique el Banco de México en el Diario Oficial "
                    + "de la Federación el día habil anterior al día de pago. Para su consulta: www.banxico.org.mx "
                    + "(sección: Mercado cambiario/Tipos de cambio para solventar obligaciones denominadas en dólares de los Ee.Uu:A., pagaderas en la República Mexicana)" : " ";
            daoempresa d = new daoempresa();
//            Identificar si es de ath o uptown
            String n = "1";
            String logo = "AF.png";
            Empresas e = d.getempresarfc(sqlempresa, n);
            String lugar = "BLVD LAS TORRES 516 DEL VALLE SAN FRANCISCO DEL RINCON GUANAJUATO " + e.getCp();
//             fin identificar empresa
            Map parametros = new HashMap();
//            Clase que contiene el numero convertido a caracter
            convertnum conv = new convertnum();
//            Agregar parametros al reporte
            parametros.put("folio", folio);
            parametros.put("totalletra", conv.controlconversion(total).toUpperCase());
            parametros.put("nombre", e.getNombre());
            parametros.put("rfc", e.getRfc());
            parametros.put("regimen", e.getRegimen());
            parametros.put("lugar", lugar);
            parametros.put("comprobante", e.getNumcertificado());
            parametros.put("logo", "C:\\af\\bin\\" + logo);// direcion predefinida, posible cambiar en un futuro
            parametros.put("metodo", arrmetodo.get(JcMetodo.getSelectedIndex()).getDescripcion());
            parametros.put("uso", arruso.get(JcUso.getSelectedIndex()).getDescripcion());
            parametros.put("serie", "PAG");
            parametros.put("regimencliente", regimen);
            parametros.put("confo", conformidad);

            JasperReport jasper = (JasperReport) JRLoader.loadObject(getClass().getResource("/Reportestpu/index_ptpu.jasper"));
            JasperPrint print = JasperFillManager.fillReport(jasper, parametros, cpt);
            JasperViewer ver = new JasperViewer(print, false); //despliegue de reporte
            ver.setDefaultCloseOperation(DISPOSE_ON_CLOSE);
            ver.setTitle("PAG " + folio);
            ver.setVisible(true);
//            Exportacion al archivo pdf
            JRExporter exporter = new JRPdfExporter();
            exporter.setParameter(JRExporterParameter.JASPER_PRINT, print);
            exporter.setParameter(JRExporterParameter.OUTPUT_FILE, new java.io.File(e.getXml() + "\\PAG_" + folio + ".pdf"));
            exporter.exportReport();
        } catch (JRException ex) {
            Logger.getLogger(pagotpu2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void vaciarcampos() {
        arrcargoseleccion.clear();
        arrnpagos.clear();
        JlDesc.setText("0");
        Jlsub.setText("0");
        JlIva.setText("0");
        JlTotal.setText("0");
        arrcargo.clear();
        JtCliente.setText("");
        JlNombre.setText("");
        JtObs.setText(nombre);
        JtCliente.requestFocus();
        llenalistafac();
        actualizaimportes();
    }

    private void actualizaimportes() {
        Formateodedatos fd = new Formateodedatos();
        DefaultTableModel model = new DefaultTableModel();
        model.addColumn("Factura");
        model.addColumn("Pago");
        model.addColumn("Importe");
        model.addColumn("Iva");
        model.addColumn("Forma de pago");
        model.addColumn("Tipo cambio");
        int rows = nrows();
        subtotal = 0;
        impuestos = 0;
        descuentos = 0;
        model.setNumRows(rows);
        int nrows = 0;
        for (Tipo_pagos arrpg : arrnpagos) {
            if (!arrpg.getArrcargos().isEmpty()) {
                for (int i = 0; i < arrpg.getArrcargos().size(); i++) {
                    String folio = arrpg.getArrcargos().get(i).getReferencia();
                    double totalcar = arrpg.getArrcargos().get(i).getDescuento();
                    double importe = getnewcantidades(totalcar, "importe");
                    double iva = getnewcantidades(totalcar, "iva");
                    model.setValueAt(folio, nrows, 0);
                    model.setValueAt(totalcar, nrows, 1);
                    model.setValueAt(fd.formatdecimalv2(importe), nrows, 2);
                    model.setValueAt(fd.formatdecimalv2(iva), nrows, 3);
                    model.setValueAt(arrpg.getFp(), nrows, 4);
                    model.setValueAt(arrpg.getTipocambio(), nrows, 5);
                    subtotal += importe;
                    impuestos += iva;
                    nrows++;
                }
                JtDetalle.setModel(model);
                total = subtotal + impuestos;
                //Solo para despliqgue de informacion
                JlIva.setText(fd.formatdecimalv2(impuestos) + "");
                Jlsub.setText(fd.formatdecimalv2(subtotal) + "");
                JlDesc.setText(descuentos + "");
                JlTotal.setText(fd.formatdecimalv2(total) + "");
            } else {
                JtCliente.requestFocus();// regresa al campo inicial del cliente
            }
        }
        JtDetalle.setModel(model);
    }

    /**
     * Obtiene el numero total de las lineas dentro del array Tipo_pagos
     *
     * @return
     */
    private int nrows() {
        int row = 0;
        for (Tipo_pagos arrp : arrnpagos) {
            row += arrp.getArrcargos().size();
        }
        return row;
    }

    private double getnewcantidades(double a, String tipo) {
        double cant = 0;
        switch (tipo) {
            case "importe":
                double aux = a / 1.16;
                //cant = BigDecimal.valueOf(aux).setScale(6, RoundingMode.HALF_UP).doubleValue();
                cant = aux;
                break;
            case "iva":
                aux = (a / 1.16) * 0.16;
                //cant = (BigDecimal.valueOf(aux).setScale(6, RoundingMode.HALF_UP).doubleValue());
                cant = aux;
                break;
        }
        cant = BigDecimal.valueOf(cant).setScale(2, RoundingMode.HALF_UP).doubleValue();
        return cant;
    }

    private double getcant16(double a) {
        double cant = BigDecimal.valueOf(a).setScale(6, RoundingMode.HALF_UP).doubleValue();
        return cant;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JcCuenta;
    private javax.swing.JComboBox<String> JcMetodo;
    private javax.swing.JComboBox<String> JcUso;
    private javax.swing.JLabel JlDesc;
    private javax.swing.JLabel JlIva;
    private javax.swing.JLabel JlNombre;
    private javax.swing.JLabel JlTotal;
    private javax.swing.JList<String> Jlcargofac;
    private javax.swing.JLabel Jlsub;
    public javax.swing.JTextField JtCliente;
    private javax.swing.JTable JtDetalle;
    private com.toedter.calendar.JDateChooser JtFecha;
    private javax.swing.JTextArea JtObs;
    private javax.swing.ButtonGroup grupo;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPopupMenu pop;
    // End of variables declaration//GEN-END:variables
}
